    package projectui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Arrays;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

 

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Harsh Kukreja
 */


public class Order1 extends javax.swing.JFrame {
    
   
    /**
     * Creates new form Order1
     */
    
    /*
    Below constructor connects the database and setBackground,foreground, by default whenever the class object is created
    full list is passed using boolean flag true see below method addElementsIntoList1 for detail.
    */
    public Order1() {
        total=0;
        conn = MySqlConnect.connectDB();
        this.setIconImage(new ImageIcon("C:\\Users\\Harsh\\Documents\\NetBeansProjects\\ProjectUi\\Project images\\icons\\letter-v.png").getImage());
        initComponents();
        setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.decode("#1B1416"));
        this.setSize(720,576);
        this.setForeground(Color.decode("#F3F7F8"));
        addElementsIntoList1("SELECT * FROM canteendb",true);
        txtSearch.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            public void insertUpdate(DocumentEvent e) {
                searchFilter();
                
            }
            @Override
            public void removeUpdate(DocumentEvent e) {
               searchFilter();
             
            }
            @Override
            public void changedUpdate(DocumentEvent e) {}
        
        });
        pack();
        pnlAcceptQuantity.setVisible(false);
        setVisible(false);
        pnlCancelPanel.setVisible(false);
        
        t.start();
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdbAcceptQuantity = new javax.swing.JDialog();
        pnlAcceptQuantity = new javax.swing.JPanel();
        lblHeadingDialog = new javax.swing.JLabel();
        jspnQuantity = new javax.swing.JSpinner();
        lblYouSelected = new javax.swing.JLabel();
        btnOkDialog = new javax.swing.JButton();
        lblNotificationDialog = new javax.swing.JLabel();
        btnCancelDialog = new javax.swing.JButton();
        lblSelectedItemPrice = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblSelectedItemName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblSelectedItemTotalPrice = new javax.swing.JLabel();
        pnlCancelPanel = new javax.swing.JPanel();
        lblRemoveItem = new javax.swing.JLabel();
        btnConfirmCancel = new javax.swing.JButton();
        btnNoCancel = new javax.swing.JButton();
        pnlOrderingPanel = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        btnConfirm = new javax.swing.JButton();
        listName = new java.awt.List();
        listOrdered = new java.awt.List();
        btnsubmit = new javax.swing.JButton();
        lblNotificationOrder1 = new javax.swing.JLabel();
        btnCloseOrder = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblMenu = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblQuotes = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jdbAcceptQuantity.setModal(true);
        jdbAcceptQuantity.setUndecorated(true);
        jdbAcceptQuantity.setSize(new java.awt.Dimension(582, 266));
        jdbAcceptQuantity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jdbAcceptQuantityFocusGained(evt);
            }
        });
        jdbAcceptQuantity.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlAcceptQuantity.setBackground(new java.awt.Color(27, 20, 22));
        pnlAcceptQuantity.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHeadingDialog.setFont(new java.awt.Font("Kalinga", 0, 24)); // NOI18N
        lblHeadingDialog.setForeground(new java.awt.Color(243, 247, 248));
        lblHeadingDialog.setText("Enter the quantity");
        pnlAcceptQuantity.add(lblHeadingDialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(206, 32, -1, -1));

        jspnQuantity.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        jspnQuantity.setModel(new javax.swing.SpinnerNumberModel(1, null, 10, 1));
        jspnQuantity.setBorder(null);
        jspnQuantity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jspnQuantityStateChanged(evt);
            }
        });
        pnlAcceptQuantity.add(jspnQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(392, 105, -1, -1));

        lblYouSelected.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        lblYouSelected.setForeground(new java.awt.Color(243, 247, 248));
        lblYouSelected.setText("You Selected       :");
        pnlAcceptQuantity.add(lblYouSelected, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 105, -1, -1));

        btnOkDialog.setBackground(new java.awt.Color(27, 20, 22));
        btnOkDialog.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        btnOkDialog.setForeground(new java.awt.Color(243, 247, 248));
        btnOkDialog.setText("Ok");
        btnOkDialog.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(243, 247, 248)));
        btnOkDialog.setContentAreaFilled(false);
        btnOkDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkDialogActionPerformed(evt);
            }
        });
        pnlAcceptQuantity.add(btnOkDialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 222, 58, -1));

        lblNotificationDialog.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        pnlAcceptQuantity.add(lblNotificationDialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 216, -1, -1));

        btnCancelDialog.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        btnCancelDialog.setForeground(new java.awt.Color(243, 247, 248));
        btnCancelDialog.setText("Cancel");
        btnCancelDialog.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(243, 247, 248)));
        btnCancelDialog.setContentAreaFilled(false);
        btnCancelDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelDialogActionPerformed(evt);
            }
        });
        pnlAcceptQuantity.add(btnCancelDialog, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 222, 57, -1));

        lblSelectedItemPrice.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        lblSelectedItemPrice.setForeground(new java.awt.Color(243, 247, 248));
        lblSelectedItemPrice.setText("Label");
        pnlAcceptQuantity.add(lblSelectedItemPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 135, -1, -1));

        lblPrice.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        lblPrice.setForeground(new java.awt.Color(243, 247, 248));
        lblPrice.setText("Price (in Rs.)        :");
        pnlAcceptQuantity.add(lblPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 135, 118, -1));

        lblSelectedItemName.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        lblSelectedItemName.setForeground(new java.awt.Color(243, 247, 248));
        lblSelectedItemName.setText("Label");
        pnlAcceptQuantity.add(lblSelectedItemName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 105, -1, -1));

        jLabel2.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(243, 247, 248));
        jLabel2.setText("Total Price(in Rs.):");
        pnlAcceptQuantity.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 164, 118, -1));

        lblSelectedItemTotalPrice.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        lblSelectedItemTotalPrice.setForeground(new java.awt.Color(243, 247, 248));
        pnlAcceptQuantity.add(lblSelectedItemTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 164, -1, -1));

        jdbAcceptQuantity.getContentPane().add(pnlAcceptQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 290));

        pnlCancelPanel.setBackground(new java.awt.Color(27, 20, 22));

        lblRemoveItem.setFont(new java.awt.Font("Kalinga", 1, 18)); // NOI18N
        lblRemoveItem.setForeground(new java.awt.Color(243, 247, 248));
        lblRemoveItem.setText("This will remove the selected item from the list");

        btnConfirmCancel.setBackground(new java.awt.Color(27, 20, 22));
        btnConfirmCancel.setFont(new java.awt.Font("Kalinga", 0, 18)); // NOI18N
        btnConfirmCancel.setForeground(new java.awt.Color(243, 247, 248));
        btnConfirmCancel.setText("Yes Proceed!");
        btnConfirmCancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(243, 247, 248)));
        btnConfirmCancel.setContentAreaFilled(false);
        btnConfirmCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmCancelActionPerformed(evt);
            }
        });

        btnNoCancel.setBackground(new java.awt.Color(27, 20, 22));
        btnNoCancel.setFont(new java.awt.Font("Kalinga", 0, 18)); // NOI18N
        btnNoCancel.setForeground(new java.awt.Color(243, 247, 248));
        btnNoCancel.setText("No");
        btnNoCancel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(243, 247, 248)));
        btnNoCancel.setContentAreaFilled(false);
        btnNoCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlCancelPanelLayout = new javax.swing.GroupLayout(pnlCancelPanel);
        pnlCancelPanel.setLayout(pnlCancelPanelLayout);
        pnlCancelPanelLayout.setHorizontalGroup(
            pnlCancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCancelPanelLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(pnlCancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCancelPanelLayout.createSequentialGroup()
                        .addComponent(lblRemoveItem)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlCancelPanelLayout.createSequentialGroup()
                        .addGap(0, 29, Short.MAX_VALUE)
                        .addComponent(btnConfirmCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(btnNoCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(178, 178, 178))))
        );
        pnlCancelPanelLayout.setVerticalGroup(
            pnlCancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCancelPanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(lblRemoveItem)
                .addGap(71, 71, 71)
                .addGroup(pnlCancelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmCancel)
                    .addComponent(btnNoCancel))
                .addContainerGap(101, Short.MAX_VALUE))
        );

        jdbAcceptQuantity.getContentPane().add(pnlCancelPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 610, 290));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(27, 20, 21));
        setUndecorated(true);

        pnlOrderingPanel.setBackground(new java.awt.Color(27, 20, 22));
        pnlOrderingPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCancel.setBackground(new java.awt.Color(27, 20, 22));
        btnCancel.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Harsh\\Documents\\NetBeansProjects\\ProjectUi\\Project images\\Other Images\\cancel (3).png")); // NOI18N
        btnCancel.setBorder(null);
        btnCancel.setContentAreaFilled(false);
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        pnlOrderingPanel.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 370, -1, -1));

        txtSearch.setBackground(new java.awt.Color(27, 20, 22));
        txtSearch.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(243, 247, 248));
        txtSearch.setCaretColor(new java.awt.Color(243, 247, 248));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        pnlOrderingPanel.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 180, -1));

        lblSearch.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(243, 247, 248));
        lblSearch.setText("Search:");
        pnlOrderingPanel.add(lblSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, -1, -1));

        btnConfirm.setBackground(new java.awt.Color(27, 20, 22));
        btnConfirm.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        btnConfirm.setIcon(new javax.swing.ImageIcon("C:\\Users\\Harsh\\Documents\\NetBeansProjects\\ProjectUi\\Project images\\Other Images\\confirm.png")); // NOI18N
        btnConfirm.setBorder(null);
        btnConfirm.setContentAreaFilled(false);
        btnConfirm.setEnabled(false);
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        pnlOrderingPanel.add(btnConfirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 260, -1, -1));

        listName.setBackground(new java.awt.Color(27, 20, 22));
        listName.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        listName.setForeground(new java.awt.Color(243, 247, 248));
        listName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listNameItemStateChanged(evt);
            }
        });
        listName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listNameActionPerformed(evt);
            }
        });
        pnlOrderingPanel.add(listName, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 180, 258));

        listOrdered.setBackground(new java.awt.Color(27, 20, 22));
        listOrdered.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        listOrdered.setForeground(new java.awt.Color(243, 247, 248));
        listOrdered.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listOrderedItemStateChanged(evt);
            }
        });
        listOrdered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listOrderedActionPerformed(evt);
            }
        });
        pnlOrderingPanel.add(listOrdered, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 220, 180, 258));

        btnsubmit.setBackground(new java.awt.Color(27, 20, 22));
        btnsubmit.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        btnsubmit.setForeground(new java.awt.Color(243, 247, 248));
        btnsubmit.setText("Checkout");
        btnsubmit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(243, 247, 248)));
        btnsubmit.setContentAreaFilled(false);
        btnsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsubmitActionPerformed(evt);
            }
        });
        pnlOrderingPanel.add(btnsubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(587, 520, 90, -1));

        lblNotificationOrder1.setFont(new java.awt.Font("Kalinga", 0, 14)); // NOI18N
        lblNotificationOrder1.setForeground(new java.awt.Color(243, 247, 248));
        pnlOrderingPanel.add(lblNotificationOrder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 508, -1, -1));

        btnCloseOrder.setBackground(new java.awt.Color(27, 20, 22));
        btnCloseOrder.setBorder(null);
        btnCloseOrder.setContentAreaFilled(false);
        btnCloseOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseOrderActionPerformed(evt);
            }
        });
        pnlOrderingPanel.add(btnCloseOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(703, 0, -1, -1));

        jLabel3.setFont(new java.awt.Font("Kalinga", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(243, 247, 248));
        jLabel3.setText("Order Now");
        pnlOrderingPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, -1, -1));

        lblMenu.setFont(new java.awt.Font("Kalinga", 0, 18)); // NOI18N
        lblMenu.setForeground(new java.awt.Color(243, 247, 248));
        lblMenu.setText("Our Menu");
        pnlOrderingPanel.add(lblMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, -1, -1));

        jLabel4.setFont(new java.awt.Font("Kalinga", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(243, 247, 248));
        jLabel4.setText("Your Check List");
        pnlOrderingPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 110, -1, -1));

        jPanel1.setBackground(new java.awt.Color(27, 20, 22));

        lblQuotes.setFont(new java.awt.Font("Kalinga", 1, 18)); // NOI18N
        lblQuotes.setForeground(new java.awt.Color(243, 247, 248));
        lblQuotes.setText("Food is life");

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Harsh\\Documents\\NetBeansProjects\\ProjectUi\\Project images\\icons\\thinking (1).png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblQuotes, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuotes)
                    .addComponent(jLabel1))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pnlOrderingPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, 580, 70));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlOrderingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlOrderingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
       confirmButtonActionPerformed();
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        pnlAcceptQuantity.setVisible(false); 
        pnlCancelPanel.setVisible(true);
        jdbAcceptQuantity.setVisible(true);
        jdbAcceptQuantity.setModal(true);
        jdbAcceptQuantity.setSize(582,720);
       if(confirmToDelete){
            listOrdered.remove(listOrdered.getSelectedItem());
            sortListName();
       }
        
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed
   
   
    private void btnOkDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkDialogActionPerformed
        // TODO add your handling code here:
       okButtonActionPerformed();
    }//GEN-LAST:event_btnOkDialogActionPerformed

    private void btnCancelDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelDialogActionPerformed
        // TODO add your handling code here:
        jdbAcceptQuantity.dispose();   
        
    }//GEN-LAST:event_btnCancelDialogActionPerformed

    private void jdbAcceptQuantityFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdbAcceptQuantityFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jdbAcceptQuantityFocusGained

    private void btnCloseOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseOrderActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnCloseOrderActionPerformed

    private void btnsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsubmitActionPerformed
      t.stop();
      String[] list = listOrdered.getItems();
      setListOrdered(list);
      SubmitDemo obj = SubmitDemo.getSubmitObject();
      obj.setVisible(true);
    dispose();
    }//GEN-LAST:event_btnsubmitActionPerformed

    private void listOrderedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listOrderedActionPerformed
        // TODO add your handling code here:
        flag=false;
        orderedListActionPerformed();
    }//GEN-LAST:event_listOrderedActionPerformed

    private void listNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listNameActionPerformed
         // TODO add your handling code here:
      
    }//GEN-LAST:event_listNameActionPerformed

    private void listOrderedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listOrderedItemStateChanged
        // TODO add your handling code here:
        btnCancel.setEnabled(true);
    }//GEN-LAST:event_listOrderedItemStateChanged

    private void listNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listNameItemStateChanged
        // TODO add your handling code here:
           btnConfirm.setEnabled(true);
    }//GEN-LAST:event_listNameItemStateChanged

    private void jspnQuantityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jspnQuantityStateChanged
        // TODO add your handling code here:
        lblSelectedItemTotalPrice.setText(""+getPriceOfItem(sel)*(int)jspnQuantity.getValue());
    }//GEN-LAST:event_jspnQuantityStateChanged

    private void btnConfirmCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmCancelActionPerformed
        confirmToDelete=true;
        String sql="DELETE FROM ordereditems WHERE name=?";
        try {
            preparedStatement=conn.prepareStatement(sql);
            preparedStatement.setString(1,listOrdered.getSelectedItem());
            preparedStatement.execute();
            jdbAcceptQuantity.dispose();
            refreshList();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue"+e);
        }
    }//GEN-LAST:event_btnConfirmCancelActionPerformed

    private void btnNoCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoCancelActionPerformed
        confirmToDelete=false;
        jdbAcceptQuantity.dispose();
    }//GEN-LAST:event_btnNoCancelActionPerformed
    
   
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Macintosh*".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Order1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Order1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                order1.setVisible(true);
            }
        });
    }
    
    /*
    ****************BY:HARSH KUKREJA****************************
    ****************GETTERS AND SETTERS*************************
    */
    public static String[] getListOrdered() {
        return list;
    }
    
    public int getJsValue(){
        return value;
    }

    public void setListOrdered(String[] list) {
        this.list = list;
    }

    public void setJsValue(int value) {
        this.value = value;
    }
    
    public static Order1 getObject(){
        return new Order1();
    }
    
    public String selectedItem(){
        return listName.getSelectedItem();
    }
    
    public int getTotal(){
        System.out.println("Total(from getter)"+total);
        return total;
    }
    
     public void setTotal(int total){
         System.out.println("totalFrom setter"+total);
         this.total=total;
         System.out.println("Total after settting:"+total);
     }
     
      public String getEmail(){
          return startingObject.getEmail();
      }
    //******************************END OF GETTERS AND SETTERS*********************************
    
    //*********************************OTHER METHODS****************************************************
    
    /*
    By:Harsh Kukreja
    The below method contains two parameters 1st is to pass the query to the sql using preparedStatement and 2nd is 
    for seaching if we call searchfilter then there might be 2 possibilites one is of the full list and the second
    is for the searched list so a boolean flag is kept whether we want seached list or the full list if 
    true is passed full list will be added into listName and if false is passed then only searched list will be added into the list 
    */
    public void addElementsIntoList1(String sql,boolean flag){
    try{   
            //String sql = "SELECT * FROM canteendb WHERE category";
            preparedStatement = conn.prepareStatement(sql);
            rs = preparedStatement.executeQuery();
            if(flag == true){
                while(rs.next()){
                listName.add(rs.getString("foodname"));
                }
            }
            else if(flag == false){
                listName.clear();
                while(rs.next()){
                   listName.add(rs.getString("foodname"));
                }
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Isse: "+e.getMessage());
        }catch (IllegalArgumentException iae){
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "You missed me: "+e.getMessage());
        }
    }
    /*
    By:Harsh Kukreja
    The below method Sorts the list.
    */
    private void sortListName(){
        String list[] = listName.getItems();
        Arrays.sort(list);
        listName.removeAll();
        for (int i = 0; i < list.length; i++) {
            listName.add(list[i]);
        }
    }  
    /*
    By:Harsh Kukreja
    The below method Sorts the Ordered list.
    */
    private void sortListOrdered(){
        String list[] = listOrdered.getItems();
       Arrays.sort(list);
       listOrdered.removeAll();
        for (int i = 0; i < list.length; i++) {
            listOrdered.add(list[i]);
        }
    }
    /*
    By:Harsh Kukreja
    The below method searches the whether element is present or not in listName and acccording to that elements are added
    into listName usiing addElementsIntoList1()
    */
     private void searchFilter(){
        key = txtSearch.getText();
        String sql;       
        if(!key.equals("")){
             sql = "SELECT * FROM canteendb where foodname like '%" + key +"%'";
             addElementsIntoList1(sql, false);
        }else{
            sql ="SELECT foodname FROM canteendb";
            listName.clear();
            addElementsIntoList1(sql, true);            
        }
    }
     /*
     By:Harsh Kukreja
    The below method is removes the elements from listName which are present in the listOrdered 
    */
     private void check(){
        String list[] = listOrdered.getItems();
        if(list != null){
            for (int i = 0; i < list.length; i++) {
                listName.remove(list[i]);
            }
        }
    }
     /*
     By:Harsh Kukreja
     The below method return the total price of the ordered items of a particluar user.
     */
     public int getTotalPrice(int pr){
         total=pr+total;
         setTotal(total);
        System.out.println("Total price is:(from getTotalPrice())"+total);
        return total;
     }
     /*
     By:Harsh Kukreja
     The below method returns the price of item passed as argument.
     */
     public int getPriceOfItem(String itemName){
         String sql="SELECT price FROM canteendb WHERE foodname=?";
         try {
             preparedStatement = conn.prepareStatement(sql);
             preparedStatement.setString(1,itemName);
             rs=preparedStatement.executeQuery();
             if(rs!=null){
                 rs.next();
                 return rs.getInt("price");
             }           
             return 0;
         } catch (Exception e) {
             System.out.println("Some issue :"+e);
             return 0;
         }
     }
     /*
     By:Harsh Kukreja
     The below method inserts the item into ordered list of a particular user
     */
    public void insertIntoDb(boolean flag){
        String sql="";
        String email=startingObject.getEmail();
        System.out.println("Email:"+email);
        try {
            if(flag){
                sql ="INSERT INTO ordereditems(email, name, quantity,date,totalprice) VALUES (?,?,?,CURDATE(),?)";
                preparedStatement=conn.prepareStatement(sql);
                preparedStatement.setString(1,email);
                preparedStatement.setString(2,lblSelectedItemName.getText());
                preparedStatement.setString(3,""+getJsValue());
                preparedStatement.setString(4,lblSelectedItemTotalPrice.getText());
                preparedStatement.execute();
            }
            else{
                sql="UPDATE ordereditems SET quantity=?,date=CURDATE(),totalprice=? WHERE email=? AND name=?";
                preparedStatement=conn.prepareStatement(sql);
                         System.out.println(getJsValue());
                preparedStatement.setString(1,""+getJsValue());
                preparedStatement.setString(2,lblSelectedItemTotalPrice.getText());
                preparedStatement.setString(3,email);
                preparedStatement.setString(4,lblSelectedItemName.getText());
                preparedStatement.execute();
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue in inserting order"+e);
        }
    }
    /*
    BY:Harsh Kukreja
    The below methods is called if any item on OrderedList is double clicked.
    */
    public void orderedListActionPerformed(){
        btnCancel.setEnabled(true);
        String query = "SELECT quantity FROM ordereditems WHERE name = ? AND email=? AND date=CURDATE()";
        try {
            preparedStatement=conn.prepareStatement(query);
            preparedStatement.setString(1,listOrdered.getSelectedItem());
            preparedStatement.setString(2,startingObject.getEmail());
            rs = preparedStatement.executeQuery();
            while(rs.next()){
                Integer quantity=new Integer(rs.getString("quantity"));
                jspnQuantity.setValue(quantity);
            }
            jdbAcceptQuantity.setVisible(true);
            jdbAcceptQuantity.setModal(true);
            jdbAcceptQuantity.setSize(582,266);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Some issue"+e);
        }
    }
    /*
    BY:Harsh Kukreja
    The below method is called when 'OK' is pressed.
    */
    public void okButtonActionPerformed(){
         if((int)jspnQuantity.getValue()==0){
            lblNotificationDialog.setForeground(Color.red);
            lblNotificationDialog.setText("Quantity cannot be 0");
        }
        else{
           status=true;
           setJsValue((int)jspnQuantity.getValue());
           insertIntoDb(status);

           Integer i = new Integer(lblSelectedItemTotalPrice.getText());
           getTotalPrice((int)i);
           jdbAcceptQuantity.dispose();
        }
        jspnQuantity.setValue(1);
        
    }
    /*
    BY:Harsh Kukreja
    The below method is called if Confirm Button is Pressed.
    */
    public void confirmButtonActionPerformed(){
         if(listName.getSelectedIndex() == -1){
            lblNotificationOrder1.setForeground(Color.red);
            lblNotificationOrder1.setText("Please Select the item first");
        }else{
            jspnQuantity.setValue(1);
            sel=listName.getSelectedItem();
            pnlAcceptQuantity.setVisible(true);
            lblSelectedItemTotalPrice.setText(""+getPriceOfItem(sel));
            lblSelectedItemPrice.setText(""+getPriceOfItem(sel));
            lblSelectedItemName.setText(sel);
            jdbAcceptQuantity.setVisible(true);
            jdbAcceptQuantity.setModal(true);
            jdbAcceptQuantity.setSize(582,266);
            //getList = listName.getSelectedItem();
         
        }
        if(status){
            listOrdered.add(listName.getSelectedItem());
            listName.remove(sel);
           sortListOrdered();
        }
    }
    
    public void refreshList(){
        String sql="SELECT * FROM ordereditems WHERE date=CURDATE() AND email=?";
        try {
            preparedStatement=conn.prepareStatement(sql);
            preparedStatement.setString(1,startingObject.getEmail());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Issue"+e);
        }
    }
  
     //**************************END OF METHODS**********************************
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCancelDialog;
    private javax.swing.JButton btnCloseOrder;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnConfirmCancel;
    private javax.swing.JButton btnNoCancel;
    private javax.swing.JButton btnOkDialog;
    private javax.swing.JButton btnsubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JDialog jdbAcceptQuantity;
    private javax.swing.JSpinner jspnQuantity;
    private javax.swing.JLabel lblHeadingDialog;
    private javax.swing.JLabel lblMenu;
    private javax.swing.JLabel lblNotificationDialog;
    private javax.swing.JLabel lblNotificationOrder1;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblQuotes;
    private javax.swing.JLabel lblRemoveItem;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSelectedItemName;
    private javax.swing.JLabel lblSelectedItemPrice;
    private javax.swing.JLabel lblSelectedItemTotalPrice;
    private javax.swing.JLabel lblYouSelected;
    private java.awt.List listName;
    private java.awt.List listOrdered;
    private javax.swing.JPanel pnlAcceptQuantity;
    private javax.swing.JPanel pnlCancelPanel;
    private javax.swing.JPanel pnlOrderingPanel;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
    private static String[] list;
    private String key ;
    private  int value;
    static Order1 order1 = new Order1();
    static boolean status=false;
    String getList;
    static boolean confirmToDelete=false;
    static int val=0;
    Connection conn= null;
    ResultSet rs = null;
    PreparedStatement preparedStatement = null;
    static String sel;
    int pr=0;
    StartingPage startingObject=StartingPage.getObject();
    Timer t = new Timer(3000,new ActionListener(){
            String quotes[]={"Good Food Good Mood!","Health is Wealth!","All you need is good food!","Good food leads to good life!"};
            int i=0;
            int j=0;
            String color[]={"#FA8072","#5CC4A3","#C2C45C","#5CC462"};
            public void actionPerformed(ActionEvent ae){
                if(i<4){
                    lblQuotes.setForeground(Color.decode(color[j++]));
                    lblQuotes.setText(quotes[i++]);
                    if(i==4){
                        i=0;
                        j=0;
                    }
                }
            }
        });;
    static int total;
    static boolean flag=true;
}


